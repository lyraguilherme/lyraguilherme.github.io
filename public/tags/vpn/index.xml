<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>VPN on Guilherme Lyra</title>
    <link>http://localhost:1313/tags/vpn/</link>
    <description>Recent content in VPN on Guilherme Lyra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 06 Oct 2024 18:00:00 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/vpn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating AWS site-to-site VPNs with Terraform</title>
      <link>http://localhost:1313/posts/terraform-aws-vpn/</link>
      <pubDate>Sun, 06 Oct 2024 18:00:00 -0300</pubDate>
      <guid>http://localhost:1313/posts/terraform-aws-vpn/</guid>
      <description>Introduction In this post, I&amp;rsquo;ll walk you through how to use Terraform to set up a VPN site-to-site connection on AWS, leveraging Infrastructure as Code (IaC) to make the process quicker, easier, and fully repeatable.
For the examples below, we’ll build a cloud infrastructure using a Virtual Private Gateway (VGW). In a future post, we’ll explore using a Transit Gateway (TGW) for more complex setups.
I’m running everything on a MacBook, but you can easily replicate these steps on a Linux jump host or any similar environment.</description>
    </item>
  </channel>
</rss>
